server:
  port: 80

spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      globalcors:
        default-filters:
          - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE
        cors-configurations:
          '[/**]':
            allowedOrigins:
              - 'http://localhost:3000'
              - 'http://localhost:5173'
              - ${FRONTEND_HOST}
            allow-credentials: true
            allowedHeaders: '*'
            allowedMethods:
              - PUT
              - GET
              - POST
              - DELETE
              - OPTIONS
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/oauth2/**
        - id: content-slave-service
          uri: lb://CONTENT-SLAVE-SERVICE
          predicates:
            - Path=/content-slave-service/**
          filters:
            - AuthorizationHeaderFilter
        - id: upload-service
          uri: lb://UPLOAD-SERVICE
          predicates:
            - Path=/upload-service/**
          filters:
            - AuthorizationHeaderFilter
        - id: statistics-service
          uri: lb://STATISTICS-SERVICE
          predicates:
            - Path=/statistics-service/**
          filters:
            - AuthorizationHeaderFilter
        - id: comment-service
          uri: lb://COMMENT-SERVICE
          predicates:
            - Path=/comment-service/**
          filters:
            - AuthorizationHeaderFilter
        - id: personalized-service
          uri: lb://PERSONALIZED-SERVICE
          predicates:
            - Path=/personalized-service/**
          filters:
            - AuthorizationHeaderFilter

eureka:
  client:
    service-url:
      defaultZone: http://${EUREKA_HOST}:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    hostname: ${INSTANCE_HOST}

management:
  endpoint:
    web:
      exposure:
        include: "*"

jwt:
  secret: ${JWT_SECRET}